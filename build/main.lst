ARM GAS  /var/folders/_f/88qcw_5n2jl40jjphvxyt7wh0000gn/T//ccCJayWR.s 			page 1


   1              		.cpu cortex-m3
   2              		.arch armv7-m
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.file	"main.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.section	.rodata.HAL_UART_RxCpltCallback.str1.4,"aMS",%progbits,1
  18              		.align	2
  19              	.LC0:
  20 0000 4552524F 		.ascii	"ERROR\012\000"
  20      520A00
  21              		.section	.text.HAL_UART_RxCpltCallback,"ax",%progbits
  22              		.align	1
  23              		.global	HAL_UART_RxCpltCallback
  24              		.syntax unified
  25              		.thumb
  26              		.thumb_func
  28              	HAL_UART_RxCpltCallback:
  29              	.LVL0:
  30              	.LFB65:
  31              		.file 1 "Src/main.c"
   1:Src/main.c    **** /* USER CODE BEGIN Header */
   2:Src/main.c    **** /**
   3:Src/main.c    ****  ******************************************************************************
   4:Src/main.c    ****  * @file           : main.c
   5:Src/main.c    ****  * @brief          : Main program body
   6:Src/main.c    ****  ******************************************************************************
   7:Src/main.c    ****  * @attention
   8:Src/main.c    ****  *
   9:Src/main.c    ****  * Copyright (c) 2022 STMicroelectronics.
  10:Src/main.c    ****  * All rights reserved.
  11:Src/main.c    ****  *
  12:Src/main.c    ****  * This software is licensed under terms that can be found in the LICENSE file
  13:Src/main.c    ****  * in the root directory of this software component.
  14:Src/main.c    ****  * If no LICENSE file comes with this software, it is provided AS-IS.
  15:Src/main.c    ****  *
  16:Src/main.c    ****  ******************************************************************************
  17:Src/main.c    ****  */
  18:Src/main.c    **** /* USER CODE END Header */
  19:Src/main.c    **** /* Includes ------------------------------------------------------------------*/
  20:Src/main.c    **** #include "main.h"
  21:Src/main.c    **** 
  22:Src/main.c    **** #include "gpio.h"
  23:Src/main.c    **** #include "spi.h"
  24:Src/main.c    **** #include "usart.h"
  25:Src/main.c    **** 
  26:Src/main.c    **** /* Private includes ----------------------------------------------------------*/
ARM GAS  /var/folders/_f/88qcw_5n2jl40jjphvxyt7wh0000gn/T//ccCJayWR.s 			page 2


  27:Src/main.c    **** /* USER CODE BEGIN Includes */
  28:Src/main.c    **** #include "console.h"
  29:Src/main.c    **** #include "dac.h"
  30:Src/main.c    **** #include "stdint.h"
  31:Src/main.c    **** #include "stdlib.h"
  32:Src/main.c    **** /* USER CODE END Includes */
  33:Src/main.c    **** 
  34:Src/main.c    **** /* Private typedef -----------------------------------------------------------*/
  35:Src/main.c    **** /* USER CODE BEGIN PTD */
  36:Src/main.c    **** 
  37:Src/main.c    **** /* USER CODE END PTD */
  38:Src/main.c    **** 
  39:Src/main.c    **** /* Private define ------------------------------------------------------------*/
  40:Src/main.c    **** /* USER CODE BEGIN PD */
  41:Src/main.c    **** /* USER CODE END PD */
  42:Src/main.c    **** 
  43:Src/main.c    **** /* Private macro -------------------------------------------------------------*/
  44:Src/main.c    **** /* USER CODE BEGIN PM */
  45:Src/main.c    **** 
  46:Src/main.c    **** /* USER CODE END PM */
  47:Src/main.c    **** 
  48:Src/main.c    **** /* Private variables ---------------------------------------------------------*/
  49:Src/main.c    **** 
  50:Src/main.c    **** /* USER CODE BEGIN PV */
  51:Src/main.c    **** uint8_t text[] =
  52:Src/main.c    ****     "This firmware control voltage on output DAC \n\
  53:Src/main.c    **** Settings: 115200 Baud, NL (new line) \n\
  54:Src/main.c    **** Channel names: ao0 ao1 ao2 \n\
  55:Src/main.c    **** Range output voltage: 0-10v \n\
  56:Src/main.c    **** Examples of commands: \n\
  57:Src/main.c    **** ao0 5.54 \n\
  58:Src/main.c    **** ao1 0 \n\
  59:Src/main.c    **** ao2 10 \n\
  60:Src/main.c    **** ///////////////////END/////////////////////\n\n\
  61:Src/main.c    **** ao0 0\nao1 0\nao2 0\n";
  62:Src/main.c    **** /* USER CODE END PV */
  63:Src/main.c    **** 
  64:Src/main.c    **** /* Private function prototypes
  65:Src/main.c    ****    -----------------------------------------------*/
  66:Src/main.c    **** void SystemClock_Config(void);
  67:Src/main.c    **** /* USER CODE BEGIN PFP */
  68:Src/main.c    **** 
  69:Src/main.c    **** /* USER CODE END PFP */
  70:Src/main.c    **** 
  71:Src/main.c    **** /* Private user code ---------------------------------------------------------*/
  72:Src/main.c    **** /* USER CODE BEGIN 0 */
  73:Src/main.c    **** uint8_t buf[20] = {0};
  74:Src/main.c    **** uint8_t num_symbol = 0;
  75:Src/main.c    **** 
  76:Src/main.c    **** void HAL_UART_RxCpltCallback(UART_HandleTypeDef *huart) {
  32              		.loc 1 76 57 view -0
  33              		.cfi_startproc
  34              		@ args = 0, pretend = 0, frame = 0
  35              		@ frame_needed = 0, uses_anonymous_args = 0
  36              		.loc 1 76 57 is_stmt 0 view .LVU1
  37 0000 08B5     		push	{r3, lr}
  38              	.LCFI0:
ARM GAS  /var/folders/_f/88qcw_5n2jl40jjphvxyt7wh0000gn/T//ccCJayWR.s 			page 3


  39              		.cfi_def_cfa_offset 8
  40              		.cfi_offset 3, -8
  41              		.cfi_offset 14, -4
  77:Src/main.c    ****     if (buf[num_symbol] == '\n') {
  42              		.loc 1 77 5 is_stmt 1 view .LVU2
  43              		.loc 1 77 12 is_stmt 0 view .LVU3
  44 0002 1C4B     		ldr	r3, .L13
  45 0004 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
  46 0006 1C4A     		ldr	r2, .L13+4
  47 0008 D25C     		ldrb	r2, [r2, r3]	@ zero_extendqisi2
  48              		.loc 1 77 8 view .LVU4
  49 000a 0A2A     		cmp	r2, #10
  50 000c 0FD0     		beq	.L11
  78:Src/main.c    ****         num_symbol = 0;
  79:Src/main.c    ****         if (buf_decode(buf, sizeof(buf)) == 0) {
  80:Src/main.c    ****             uint8_t x = 0;
  81:Src/main.c    ****             for (x; x < 20; x++) {
  82:Src/main.c    ****                 if (buf[x] == '\n') {
  83:Src/main.c    ****                     x += 1;
  84:Src/main.c    ****                     break;
  85:Src/main.c    ****                 }
  86:Src/main.c    ****             }
  87:Src/main.c    ****             HAL_UART_Transmit_IT(&huart1, buf, x);
  88:Src/main.c    ****             // HAL_UART_Transmit_IT(&huart1, "  ok\n", 5);
  89:Src/main.c    ****         } else
  90:Src/main.c    ****             HAL_UART_Transmit_IT(&huart1, "ERROR\n", 6);
  91:Src/main.c    ****     } else
  92:Src/main.c    ****         num_symbol++;
  51              		.loc 1 92 9 is_stmt 1 view .LVU5
  52              		.loc 1 92 19 is_stmt 0 view .LVU6
  53 000e 0133     		adds	r3, r3, #1
  54 0010 184A     		ldr	r2, .L13
  55 0012 1370     		strb	r3, [r2]
  56              	.LVL1:
  57              	.L8:
  93:Src/main.c    **** 
  94:Src/main.c    ****     if (num_symbol == 18) num_symbol = 0;
  58              		.loc 1 94 5 is_stmt 1 view .LVU7
  59              		.loc 1 94 20 is_stmt 0 view .LVU8
  60 0014 174B     		ldr	r3, .L13
  61 0016 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
  62              		.loc 1 94 8 view .LVU9
  63 0018 122B     		cmp	r3, #18
  64 001a 27D0     		beq	.L12
  65              	.L9:
  95:Src/main.c    **** 
  96:Src/main.c    ****     HAL_UART_Receive_IT(&huart1, buf + num_symbol, 1);
  66              		.loc 1 96 5 is_stmt 1 view .LVU10
  67 001c 154B     		ldr	r3, .L13
  68 001e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
  69 0020 0122     		movs	r2, #1
  70 0022 1549     		ldr	r1, .L13+4
  71 0024 1944     		add	r1, r1, r3
  72 0026 1548     		ldr	r0, .L13+8
  73 0028 FFF7FEFF 		bl	HAL_UART_Receive_IT
  74              	.LVL2:
  97:Src/main.c    **** }
ARM GAS  /var/folders/_f/88qcw_5n2jl40jjphvxyt7wh0000gn/T//ccCJayWR.s 			page 4


  75              		.loc 1 97 1 is_stmt 0 view .LVU11
  76 002c 08BD     		pop	{r3, pc}
  77              	.LVL3:
  78              	.L11:
  78:Src/main.c    ****         if (buf_decode(buf, sizeof(buf)) == 0) {
  79              		.loc 1 78 9 is_stmt 1 view .LVU12
  78:Src/main.c    ****         if (buf_decode(buf, sizeof(buf)) == 0) {
  80              		.loc 1 78 20 is_stmt 0 view .LVU13
  81 002e 114B     		ldr	r3, .L13
  82 0030 0022     		movs	r2, #0
  83 0032 1A70     		strb	r2, [r3]
  79:Src/main.c    ****             uint8_t x = 0;
  84              		.loc 1 79 9 is_stmt 1 view .LVU14
  79:Src/main.c    ****             uint8_t x = 0;
  85              		.loc 1 79 13 is_stmt 0 view .LVU15
  86 0034 1421     		movs	r1, #20
  87 0036 1048     		ldr	r0, .L13+4
  88              	.LVL4:
  79:Src/main.c    ****             uint8_t x = 0;
  89              		.loc 1 79 13 view .LVU16
  90 0038 FFF7FEFF 		bl	buf_decode
  91              	.LVL5:
  79:Src/main.c    ****             uint8_t x = 0;
  92              		.loc 1 79 12 view .LVU17
  93 003c 80B9     		cbnz	r0, .L3
  94              	.LBB4:
  80:Src/main.c    ****             for (x; x < 20; x++) {
  95              		.loc 1 80 21 view .LVU18
  96 003e 0022     		movs	r2, #0
  97 0040 01E0     		b	.L4
  98              	.LVL6:
  99              	.L5:
  81:Src/main.c    ****                 if (buf[x] == '\n') {
 100              		.loc 1 81 29 is_stmt 1 view .LVU19
  81:Src/main.c    ****                 if (buf[x] == '\n') {
 101              		.loc 1 81 30 is_stmt 0 view .LVU20
 102 0042 0132     		adds	r2, r2, #1
 103              	.LVL7:
  81:Src/main.c    ****                 if (buf[x] == '\n') {
 104              		.loc 1 81 30 view .LVU21
 105 0044 D2B2     		uxtb	r2, r2
 106              	.LVL8:
 107              	.L4:
  81:Src/main.c    ****                 if (buf[x] == '\n') {
 108              		.loc 1 81 21 is_stmt 1 discriminator 1 view .LVU22
  81:Src/main.c    ****                 if (buf[x] == '\n') {
 109              		.loc 1 81 13 is_stmt 0 discriminator 1 view .LVU23
 110 0046 132A     		cmp	r2, #19
 111 0048 05D8     		bhi	.L6
  82:Src/main.c    ****                     x += 1;
 112              		.loc 1 82 17 is_stmt 1 view .LVU24
  82:Src/main.c    ****                     x += 1;
 113              		.loc 1 82 24 is_stmt 0 view .LVU25
 114 004a 0B4B     		ldr	r3, .L13+4
 115 004c 9B5C     		ldrb	r3, [r3, r2]	@ zero_extendqisi2
  82:Src/main.c    ****                     x += 1;
 116              		.loc 1 82 20 view .LVU26
ARM GAS  /var/folders/_f/88qcw_5n2jl40jjphvxyt7wh0000gn/T//ccCJayWR.s 			page 5


 117 004e 0A2B     		cmp	r3, #10
 118 0050 F7D1     		bne	.L5
  83:Src/main.c    ****                     break;
 119              		.loc 1 83 21 is_stmt 1 view .LVU27
  83:Src/main.c    ****                     break;
 120              		.loc 1 83 23 is_stmt 0 view .LVU28
 121 0052 0132     		adds	r2, r2, #1
 122              	.LVL9:
  83:Src/main.c    ****                     break;
 123              		.loc 1 83 23 view .LVU29
 124 0054 D2B2     		uxtb	r2, r2
 125              	.LVL10:
  84:Src/main.c    ****                 }
 126              		.loc 1 84 21 is_stmt 1 view .LVU30
 127              	.L6:
  87:Src/main.c    ****             // HAL_UART_Transmit_IT(&huart1, "  ok\n", 5);
 128              		.loc 1 87 13 view .LVU31
 129 0056 0849     		ldr	r1, .L13+4
 130 0058 0848     		ldr	r0, .L13+8
 131 005a FFF7FEFF 		bl	HAL_UART_Transmit_IT
 132              	.LVL11:
  87:Src/main.c    ****             // HAL_UART_Transmit_IT(&huart1, "  ok\n", 5);
 133              		.loc 1 87 13 is_stmt 0 view .LVU32
 134              	.LBE4:
 135 005e D9E7     		b	.L8
 136              	.L3:
  90:Src/main.c    ****     } else
 137              		.loc 1 90 13 is_stmt 1 view .LVU33
 138 0060 0622     		movs	r2, #6
 139 0062 0749     		ldr	r1, .L13+12
 140 0064 0548     		ldr	r0, .L13+8
 141 0066 FFF7FEFF 		bl	HAL_UART_Transmit_IT
 142              	.LVL12:
 143 006a D3E7     		b	.L8
 144              	.L12:
  94:Src/main.c    **** 
 145              		.loc 1 94 27 discriminator 1 view .LVU34
  94:Src/main.c    **** 
 146              		.loc 1 94 38 is_stmt 0 discriminator 1 view .LVU35
 147 006c 014B     		ldr	r3, .L13
 148 006e 0022     		movs	r2, #0
 149 0070 1A70     		strb	r2, [r3]
 150 0072 D3E7     		b	.L9
 151              	.L14:
 152              		.align	2
 153              	.L13:
 154 0074 00000000 		.word	.LANCHOR0
 155 0078 00000000 		.word	.LANCHOR1
 156 007c 00000000 		.word	huart1
 157 0080 00000000 		.word	.LC0
 158              		.cfi_endproc
 159              	.LFE65:
 161              		.section	.text.Error_Handler,"ax",%progbits
 162              		.align	1
 163              		.global	Error_Handler
 164              		.syntax unified
 165              		.thumb
ARM GAS  /var/folders/_f/88qcw_5n2jl40jjphvxyt7wh0000gn/T//ccCJayWR.s 			page 6


 166              		.thumb_func
 168              	Error_Handler:
 169              	.LFB68:
  98:Src/main.c    **** /* USER CODE END 0 */
  99:Src/main.c    **** 
 100:Src/main.c    **** /**
 101:Src/main.c    ****  * @brief  The application entry point.
 102:Src/main.c    ****  * @retval int
 103:Src/main.c    ****  */
 104:Src/main.c    **** int main(void) {
 105:Src/main.c    ****     /* USER CODE BEGIN 1 */
 106:Src/main.c    **** 
 107:Src/main.c    ****     /* USER CODE END 1 */
 108:Src/main.c    **** 
 109:Src/main.c    ****     /* MCU
 110:Src/main.c    ****      * Configuration--------------------------------------------------------*/
 111:Src/main.c    **** 
 112:Src/main.c    ****     /* Reset of all peripherals, Initializes the Flash interface and the
 113:Src/main.c    ****      * Systick. */
 114:Src/main.c    ****     HAL_Init();
 115:Src/main.c    **** 
 116:Src/main.c    ****     /* USER CODE BEGIN Init */
 117:Src/main.c    **** 
 118:Src/main.c    ****     /* USER CODE END Init */
 119:Src/main.c    **** 
 120:Src/main.c    ****     /* Configure the system clock */
 121:Src/main.c    ****     SystemClock_Config();
 122:Src/main.c    **** 
 123:Src/main.c    ****     /* USER CODE BEGIN SysInit */
 124:Src/main.c    **** 
 125:Src/main.c    ****     /* USER CODE END SysInit */
 126:Src/main.c    **** 
 127:Src/main.c    ****     /* Initialize all configured peripherals */
 128:Src/main.c    ****     MX_GPIO_Init();
 129:Src/main.c    ****     MX_SPI1_Init();
 130:Src/main.c    ****     MX_USART1_UART_Init();
 131:Src/main.c    ****     /* USER CODE BEGIN 2 */
 132:Src/main.c    ****     HAL_GPIO_WritePin(LED_GPIO_Port, LED_Pin, GPIO_PIN_SET);
 133:Src/main.c    **** 
 134:Src/main.c    ****     /* USER CODE END 2 */
 135:Src/main.c    ****     HAL_UART_Transmit_IT(&huart1, text, sizeof(text));
 136:Src/main.c    ****     buf[19] = '\n';
 137:Src/main.c    **** 
 138:Src/main.c    ****     HAL_GPIO_WritePin(CS_AO0_GPIO_Port, CS_AO0_Pin, GPIO_PIN_SET);
 139:Src/main.c    ****     HAL_GPIO_WritePin(CS_AO1_GPIO_Port, CS_AO1_Pin, GPIO_PIN_SET);
 140:Src/main.c    ****     HAL_GPIO_WritePin(CS_AO2_GPIO_Port, CS_AO2_Pin, GPIO_PIN_SET);
 141:Src/main.c    **** 
 142:Src/main.c    ****     dac_set_voltage(0, 0);
 143:Src/main.c    ****     dac_set_voltage(1, 0);
 144:Src/main.c    ****     dac_set_voltage(2, 0);
 145:Src/main.c    **** 
 146:Src/main.c    ****     HAL_UART_Receive_IT(&huart1, buf + num_symbol, 1);
 147:Src/main.c    ****     /* Infinite loop */
 148:Src/main.c    ****     /* USER CODE BEGIN WHILE */
 149:Src/main.c    ****     while (1) {
 150:Src/main.c    ****         /* USER CODE END WHILE */
 151:Src/main.c    ****         //      HAL_UART_Transmit(&huart1, hui, 5, 1);
ARM GAS  /var/folders/_f/88qcw_5n2jl40jjphvxyt7wh0000gn/T//ccCJayWR.s 			page 7


 152:Src/main.c    ****         HAL_Delay(300);
 153:Src/main.c    ****         /* USER CODE BEGIN 3 */
 154:Src/main.c    ****     }
 155:Src/main.c    ****     /* USER CODE END 3 */
 156:Src/main.c    **** }
 157:Src/main.c    **** 
 158:Src/main.c    **** /**
 159:Src/main.c    ****  * @brief System Clock Configuration
 160:Src/main.c    ****  * @retval None
 161:Src/main.c    ****  */
 162:Src/main.c    **** void SystemClock_Config(void) {
 163:Src/main.c    ****     RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 164:Src/main.c    ****     RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 165:Src/main.c    **** 
 166:Src/main.c    ****     /** Initializes the RCC Oscillators according to the specified parameters
 167:Src/main.c    ****      * in the RCC_OscInitTypeDef structure.
 168:Src/main.c    ****      */
 169:Src/main.c    ****     RCC_OscInitStruct.OscillatorType = RCC_OSCILLATORTYPE_HSI;
 170:Src/main.c    ****     RCC_OscInitStruct.HSIState = RCC_HSI_ON;
 171:Src/main.c    ****     RCC_OscInitStruct.HSICalibrationValue = RCC_HSICALIBRATION_DEFAULT;
 172:Src/main.c    ****     RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 173:Src/main.c    ****     RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSI_DIV2;
 174:Src/main.c    ****     RCC_OscInitStruct.PLL.PLLMUL = RCC_PLL_MUL4;
 175:Src/main.c    ****     if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK) {
 176:Src/main.c    ****         Error_Handler();
 177:Src/main.c    ****     }
 178:Src/main.c    ****     /** Initializes the CPU, AHB and APB buses clocks
 179:Src/main.c    ****      */
 180:Src/main.c    ****     RCC_ClkInitStruct.ClockType = RCC_CLOCKTYPE_HCLK | RCC_CLOCKTYPE_SYSCLK |
 181:Src/main.c    ****                                   RCC_CLOCKTYPE_PCLK1 | RCC_CLOCKTYPE_PCLK2;
 182:Src/main.c    ****     RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_PLLCLK;
 183:Src/main.c    ****     RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 184:Src/main.c    ****     RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV1;
 185:Src/main.c    ****     RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV1;
 186:Src/main.c    **** 
 187:Src/main.c    ****     if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_0) != HAL_OK) {
 188:Src/main.c    ****         Error_Handler();
 189:Src/main.c    ****     }
 190:Src/main.c    **** }
 191:Src/main.c    **** 
 192:Src/main.c    **** /* USER CODE BEGIN 4 */
 193:Src/main.c    **** 
 194:Src/main.c    **** /* USER CODE END 4 */
 195:Src/main.c    **** 
 196:Src/main.c    **** /**
 197:Src/main.c    ****  * @brief  This function is executed in case of error occurrence.
 198:Src/main.c    ****  * @retval None
 199:Src/main.c    ****  */
 200:Src/main.c    **** void Error_Handler(void) {
 170              		.loc 1 200 26 is_stmt 1 view -0
 171              		.cfi_startproc
 172              		@ Volatile: function does not return.
 173              		@ args = 0, pretend = 0, frame = 0
 174              		@ frame_needed = 0, uses_anonymous_args = 0
 175 0000 08B5     		push	{r3, lr}
 176              	.LCFI1:
 177              		.cfi_def_cfa_offset 8
ARM GAS  /var/folders/_f/88qcw_5n2jl40jjphvxyt7wh0000gn/T//ccCJayWR.s 			page 8


 178              		.cfi_offset 3, -8
 179              		.cfi_offset 14, -4
 201:Src/main.c    ****     /* USER CODE BEGIN Error_Handler_Debug */
 202:Src/main.c    ****     /* User can add his own implementation to report the HAL error return state
 203:Src/main.c    ****      */
 204:Src/main.c    ****     __disable_irq();
 180              		.loc 1 204 5 view .LVU37
 181              	.LBB5:
 182              	.LBI5:
 183              		.file 2 "Drivers/CMSIS/Include/cmsis_gcc.h"
   1:Drivers/CMSIS/Include/cmsis_gcc.h **** /**************************************************************************//**
   2:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @file     cmsis_gcc.h
   3:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @brief    CMSIS compiler GCC header file
   4:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @version  V5.0.4
   5:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @date     09. April 2018
   6:Drivers/CMSIS/Include/cmsis_gcc.h ****  ******************************************************************************/
   7:Drivers/CMSIS/Include/cmsis_gcc.h **** /*
   8:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Copyright (c) 2009-2018 Arm Limited. All rights reserved.
   9:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  10:Drivers/CMSIS/Include/cmsis_gcc.h ****  * SPDX-License-Identifier: Apache-2.0
  11:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  12:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Licensed under the Apache License, Version 2.0 (the License); you may
  13:Drivers/CMSIS/Include/cmsis_gcc.h ****  * not use this file except in compliance with the License.
  14:Drivers/CMSIS/Include/cmsis_gcc.h ****  * You may obtain a copy of the License at
  15:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  16:Drivers/CMSIS/Include/cmsis_gcc.h ****  * www.apache.org/licenses/LICENSE-2.0
  17:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  18:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Unless required by applicable law or agreed to in writing, software
  19:Drivers/CMSIS/Include/cmsis_gcc.h ****  * distributed under the License is distributed on an AS IS BASIS, WITHOUT
  20:Drivers/CMSIS/Include/cmsis_gcc.h ****  * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  21:Drivers/CMSIS/Include/cmsis_gcc.h ****  * See the License for the specific language governing permissions and
  22:Drivers/CMSIS/Include/cmsis_gcc.h ****  * limitations under the License.
  23:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
  24:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  25:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __CMSIS_GCC_H
  26:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_H
  27:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  28:Drivers/CMSIS/Include/cmsis_gcc.h **** /* ignore some GCC warnings */
  29:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic push
  30:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wsign-conversion"
  31:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wconversion"
  32:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wunused-parameter"
  33:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  34:Drivers/CMSIS/Include/cmsis_gcc.h **** /* Fallback for __has_builtin */
  35:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __has_builtin
  36:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __has_builtin(x) (0)
  37:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  38:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  39:Drivers/CMSIS/Include/cmsis_gcc.h **** /* CMSIS compiler specific defines */
  40:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __ASM
  41:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __ASM                                  __asm
  42:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  43:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __INLINE
  44:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __INLINE                               inline
  45:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  46:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __STATIC_INLINE
  47:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __STATIC_INLINE                        static inline
ARM GAS  /var/folders/_f/88qcw_5n2jl40jjphvxyt7wh0000gn/T//ccCJayWR.s 			page 9


  48:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  49:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __STATIC_FORCEINLINE                 
  50:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __STATIC_FORCEINLINE                   __attribute__((always_inline)) static inline
  51:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif                                           
  52:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __NO_RETURN
  53:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __NO_RETURN                            __attribute__((__noreturn__))
  54:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  55:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __USED
  56:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __USED                                 __attribute__((used))
  57:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  58:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __WEAK
  59:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __WEAK                                 __attribute__((weak))
  60:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  61:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED
  62:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED                               __attribute__((packed, aligned(1)))
  63:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  64:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED_STRUCT
  65:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED_STRUCT                        struct __attribute__((packed, aligned(1)))
  66:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  67:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED_UNION
  68:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED_UNION                         union __attribute__((packed, aligned(1)))
  69:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  70:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32        /* deprecated */
  71:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  72:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  73:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  74:Drivers/CMSIS/Include/cmsis_gcc.h ****   struct __attribute__((packed)) T_UINT32 { uint32_t v; };
  75:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  76:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32(x)                  (((struct T_UINT32 *)(x))->v)
  77:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  78:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT16_WRITE
  79:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  80:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  81:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  82:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT16_WRITE { uint16_t v; };
  83:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  84:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT16_WRITE(addr, val)    (void)((((struct T_UINT16_WRITE *)(void *)(addr))-
  85:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  86:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT16_READ
  87:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  88:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  89:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  90:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT16_READ { uint16_t v; };
  91:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  92:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT16_READ(addr)          (((const struct T_UINT16_READ *)(const void *)(add
  93:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  94:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32_WRITE
  95:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  96:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  97:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  98:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT32_WRITE { uint32_t v; };
  99:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
 100:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32_WRITE(addr, val)    (void)((((struct T_UINT32_WRITE *)(void *)(addr))-
 101:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 102:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32_READ
 103:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
 104:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
ARM GAS  /var/folders/_f/88qcw_5n2jl40jjphvxyt7wh0000gn/T//ccCJayWR.s 			page 10


 105:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
 106:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT32_READ { uint32_t v; };
 107:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
 108:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32_READ(addr)          (((const struct T_UINT32_READ *)(const void *)(add
 109:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 110:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __ALIGNED
 111:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __ALIGNED(x)                           __attribute__((aligned(x)))
 112:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 113:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __RESTRICT
 114:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __RESTRICT                             __restrict
 115:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 116:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 117:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 118:Drivers/CMSIS/Include/cmsis_gcc.h **** /* ###########################  Core Function Access  ########################### */
 119:Drivers/CMSIS/Include/cmsis_gcc.h **** /** \ingroup  CMSIS_Core_FunctionInterface
 120:Drivers/CMSIS/Include/cmsis_gcc.h ****     \defgroup CMSIS_Core_RegAccFunctions CMSIS Core Register Access Functions
 121:Drivers/CMSIS/Include/cmsis_gcc.h ****   @{
 122:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 123:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 124:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 125:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Enable IRQ Interrupts
 126:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Enables IRQ interrupts by clearing the I-bit in the CPSR.
 127:Drivers/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 128:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 129:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __enable_irq(void)
 130:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 131:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsie i" : : : "memory");
 132:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 133:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 134:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 135:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 136:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Disable IRQ Interrupts
 137:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Disables IRQ interrupts by setting the I-bit in the CPSR.
 138:Drivers/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 139:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 140:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __disable_irq(void)
 184              		.loc 2 140 27 view .LVU38
 185              	.LBB6:
 141:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 142:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsid i" : : : "memory");
 186              		.loc 2 142 3 view .LVU39
 187              		.syntax unified
 188              	@ 142 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 189 0002 72B6     		cpsid i
 190              	@ 0 "" 2
 191              		.thumb
 192              		.syntax unified
 193              	.L16:
 194              	.LBE6:
 195              	.LBE5:
 205:Src/main.c    ****     while (1) {
 196              		.loc 1 205 5 discriminator 1 view .LVU40
 206:Src/main.c    ****         HAL_GPIO_WritePin(LED_GPIO_Port, LED_Pin, GPIO_PIN_SET);
 197              		.loc 1 206 9 discriminator 1 view .LVU41
 198 0004 0A4C     		ldr	r4, .L18
 199 0006 0122     		movs	r2, #1
 200 0008 4FF40051 		mov	r1, #8192
ARM GAS  /var/folders/_f/88qcw_5n2jl40jjphvxyt7wh0000gn/T//ccCJayWR.s 			page 11


 201 000c 2046     		mov	r0, r4
 202 000e FFF7FEFF 		bl	HAL_GPIO_WritePin
 203              	.LVL13:
 207:Src/main.c    ****         HAL_Delay(400);
 204              		.loc 1 207 9 discriminator 1 view .LVU42
 205 0012 4FF4C870 		mov	r0, #400
 206 0016 FFF7FEFF 		bl	HAL_Delay
 207              	.LVL14:
 208:Src/main.c    ****         HAL_GPIO_WritePin(LED_GPIO_Port, LED_Pin, GPIO_PIN_RESET);
 208              		.loc 1 208 9 discriminator 1 view .LVU43
 209 001a 0022     		movs	r2, #0
 210 001c 4FF40051 		mov	r1, #8192
 211 0020 2046     		mov	r0, r4
 212 0022 FFF7FEFF 		bl	HAL_GPIO_WritePin
 213              	.LVL15:
 209:Src/main.c    ****         HAL_Delay(400);
 214              		.loc 1 209 9 discriminator 1 view .LVU44
 215 0026 4FF4C870 		mov	r0, #400
 216 002a FFF7FEFF 		bl	HAL_Delay
 217              	.LVL16:
 205:Src/main.c    ****         HAL_GPIO_WritePin(LED_GPIO_Port, LED_Pin, GPIO_PIN_SET);
 218              		.loc 1 205 11 discriminator 1 view .LVU45
 219 002e E9E7     		b	.L16
 220              	.L19:
 221              		.align	2
 222              	.L18:
 223 0030 00100140 		.word	1073811456
 224              		.cfi_endproc
 225              	.LFE68:
 227              		.section	.text.SystemClock_Config,"ax",%progbits
 228              		.align	1
 229              		.global	SystemClock_Config
 230              		.syntax unified
 231              		.thumb
 232              		.thumb_func
 234              	SystemClock_Config:
 235              	.LFB67:
 162:Src/main.c    ****     RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 236              		.loc 1 162 31 view -0
 237              		.cfi_startproc
 238              		@ args = 0, pretend = 0, frame = 64
 239              		@ frame_needed = 0, uses_anonymous_args = 0
 240 0000 00B5     		push	{lr}
 241              	.LCFI2:
 242              		.cfi_def_cfa_offset 4
 243              		.cfi_offset 14, -4
 244 0002 91B0     		sub	sp, sp, #68
 245              	.LCFI3:
 246              		.cfi_def_cfa_offset 72
 163:Src/main.c    ****     RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 247              		.loc 1 163 5 view .LVU47
 163:Src/main.c    ****     RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 248              		.loc 1 163 24 is_stmt 0 view .LVU48
 249 0004 2822     		movs	r2, #40
 250 0006 0021     		movs	r1, #0
 251 0008 06A8     		add	r0, sp, #24
 252 000a FFF7FEFF 		bl	memset
ARM GAS  /var/folders/_f/88qcw_5n2jl40jjphvxyt7wh0000gn/T//ccCJayWR.s 			page 12


 253              	.LVL17:
 164:Src/main.c    **** 
 254              		.loc 1 164 5 is_stmt 1 view .LVU49
 164:Src/main.c    **** 
 255              		.loc 1 164 24 is_stmt 0 view .LVU50
 256 000e 0023     		movs	r3, #0
 257 0010 0193     		str	r3, [sp, #4]
 258 0012 0293     		str	r3, [sp, #8]
 259 0014 0393     		str	r3, [sp, #12]
 260 0016 0493     		str	r3, [sp, #16]
 261 0018 0593     		str	r3, [sp, #20]
 169:Src/main.c    ****     RCC_OscInitStruct.HSIState = RCC_HSI_ON;
 262              		.loc 1 169 5 is_stmt 1 view .LVU51
 169:Src/main.c    ****     RCC_OscInitStruct.HSIState = RCC_HSI_ON;
 263              		.loc 1 169 38 is_stmt 0 view .LVU52
 264 001a 0223     		movs	r3, #2
 265 001c 0693     		str	r3, [sp, #24]
 170:Src/main.c    ****     RCC_OscInitStruct.HSICalibrationValue = RCC_HSICALIBRATION_DEFAULT;
 266              		.loc 1 170 5 is_stmt 1 view .LVU53
 170:Src/main.c    ****     RCC_OscInitStruct.HSICalibrationValue = RCC_HSICALIBRATION_DEFAULT;
 267              		.loc 1 170 32 is_stmt 0 view .LVU54
 268 001e 0122     		movs	r2, #1
 269 0020 0A92     		str	r2, [sp, #40]
 171:Src/main.c    ****     RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 270              		.loc 1 171 5 is_stmt 1 view .LVU55
 171:Src/main.c    ****     RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 271              		.loc 1 171 43 is_stmt 0 view .LVU56
 272 0022 1022     		movs	r2, #16
 273 0024 0B92     		str	r2, [sp, #44]
 172:Src/main.c    ****     RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSI_DIV2;
 274              		.loc 1 172 5 is_stmt 1 view .LVU57
 172:Src/main.c    ****     RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSI_DIV2;
 275              		.loc 1 172 36 is_stmt 0 view .LVU58
 276 0026 0D93     		str	r3, [sp, #52]
 173:Src/main.c    ****     RCC_OscInitStruct.PLL.PLLMUL = RCC_PLL_MUL4;
 277              		.loc 1 173 5 is_stmt 1 view .LVU59
 174:Src/main.c    ****     if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK) {
 278              		.loc 1 174 5 view .LVU60
 174:Src/main.c    ****     if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK) {
 279              		.loc 1 174 34 is_stmt 0 view .LVU61
 280 0028 4FF40023 		mov	r3, #524288
 281 002c 0F93     		str	r3, [sp, #60]
 175:Src/main.c    ****         Error_Handler();
 282              		.loc 1 175 5 is_stmt 1 view .LVU62
 175:Src/main.c    ****         Error_Handler();
 283              		.loc 1 175 9 is_stmt 0 view .LVU63
 284 002e 06A8     		add	r0, sp, #24
 285 0030 FFF7FEFF 		bl	HAL_RCC_OscConfig
 286              	.LVL18:
 175:Src/main.c    ****         Error_Handler();
 287              		.loc 1 175 8 view .LVU64
 288 0034 70B9     		cbnz	r0, .L24
 180:Src/main.c    ****                                   RCC_CLOCKTYPE_PCLK1 | RCC_CLOCKTYPE_PCLK2;
 289              		.loc 1 180 5 is_stmt 1 view .LVU65
 180:Src/main.c    ****                                   RCC_CLOCKTYPE_PCLK1 | RCC_CLOCKTYPE_PCLK2;
 290              		.loc 1 180 33 is_stmt 0 view .LVU66
 291 0036 0F23     		movs	r3, #15
ARM GAS  /var/folders/_f/88qcw_5n2jl40jjphvxyt7wh0000gn/T//ccCJayWR.s 			page 13


 292 0038 0193     		str	r3, [sp, #4]
 182:Src/main.c    ****     RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 293              		.loc 1 182 5 is_stmt 1 view .LVU67
 182:Src/main.c    ****     RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 294              		.loc 1 182 36 is_stmt 0 view .LVU68
 295 003a 0223     		movs	r3, #2
 296 003c 0293     		str	r3, [sp, #8]
 183:Src/main.c    ****     RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV1;
 297              		.loc 1 183 5 is_stmt 1 view .LVU69
 183:Src/main.c    ****     RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV1;
 298              		.loc 1 183 37 is_stmt 0 view .LVU70
 299 003e 0021     		movs	r1, #0
 300 0040 0391     		str	r1, [sp, #12]
 184:Src/main.c    ****     RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV1;
 301              		.loc 1 184 5 is_stmt 1 view .LVU71
 184:Src/main.c    ****     RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV1;
 302              		.loc 1 184 38 is_stmt 0 view .LVU72
 303 0042 0491     		str	r1, [sp, #16]
 185:Src/main.c    **** 
 304              		.loc 1 185 5 is_stmt 1 view .LVU73
 185:Src/main.c    **** 
 305              		.loc 1 185 38 is_stmt 0 view .LVU74
 306 0044 0591     		str	r1, [sp, #20]
 187:Src/main.c    ****         Error_Handler();
 307              		.loc 1 187 5 is_stmt 1 view .LVU75
 187:Src/main.c    ****         Error_Handler();
 308              		.loc 1 187 9 is_stmt 0 view .LVU76
 309 0046 01A8     		add	r0, sp, #4
 310 0048 FFF7FEFF 		bl	HAL_RCC_ClockConfig
 311              	.LVL19:
 187:Src/main.c    ****         Error_Handler();
 312              		.loc 1 187 8 view .LVU77
 313 004c 20B9     		cbnz	r0, .L25
 190:Src/main.c    **** 
 314              		.loc 1 190 1 view .LVU78
 315 004e 11B0     		add	sp, sp, #68
 316              	.LCFI4:
 317              		.cfi_remember_state
 318              		.cfi_def_cfa_offset 4
 319              		@ sp needed
 320 0050 5DF804FB 		ldr	pc, [sp], #4
 321              	.L24:
 322              	.LCFI5:
 323              		.cfi_restore_state
 176:Src/main.c    ****     }
 324              		.loc 1 176 9 is_stmt 1 view .LVU79
 325 0054 FFF7FEFF 		bl	Error_Handler
 326              	.LVL20:
 327              	.L25:
 188:Src/main.c    ****     }
 328              		.loc 1 188 9 view .LVU80
 329 0058 FFF7FEFF 		bl	Error_Handler
 330              	.LVL21:
 331              		.cfi_endproc
 332              	.LFE67:
 334              		.section	.text.main,"ax",%progbits
 335              		.align	1
ARM GAS  /var/folders/_f/88qcw_5n2jl40jjphvxyt7wh0000gn/T//ccCJayWR.s 			page 14


 336              		.global	main
 337              		.syntax unified
 338              		.thumb
 339              		.thumb_func
 341              	main:
 342              	.LFB66:
 104:Src/main.c    ****     /* USER CODE BEGIN 1 */
 343              		.loc 1 104 16 view -0
 344              		.cfi_startproc
 345              		@ Volatile: function does not return.
 346              		@ args = 0, pretend = 0, frame = 0
 347              		@ frame_needed = 0, uses_anonymous_args = 0
 348 0000 80B5     		push	{r7, lr}
 349              	.LCFI6:
 350              		.cfi_def_cfa_offset 8
 351              		.cfi_offset 7, -8
 352              		.cfi_offset 14, -4
 114:Src/main.c    **** 
 353              		.loc 1 114 5 view .LVU82
 354 0002 FFF7FEFF 		bl	HAL_Init
 355              	.LVL22:
 121:Src/main.c    **** 
 356              		.loc 1 121 5 view .LVU83
 357 0006 FFF7FEFF 		bl	SystemClock_Config
 358              	.LVL23:
 128:Src/main.c    ****     MX_SPI1_Init();
 359              		.loc 1 128 5 view .LVU84
 360 000a FFF7FEFF 		bl	MX_GPIO_Init
 361              	.LVL24:
 129:Src/main.c    ****     MX_USART1_UART_Init();
 362              		.loc 1 129 5 view .LVU85
 363 000e FFF7FEFF 		bl	MX_SPI1_Init
 364              	.LVL25:
 130:Src/main.c    ****     /* USER CODE BEGIN 2 */
 365              		.loc 1 130 5 view .LVU86
 366 0012 FFF7FEFF 		bl	MX_USART1_UART_Init
 367              	.LVL26:
 132:Src/main.c    **** 
 368              		.loc 1 132 5 view .LVU87
 369 0016 0122     		movs	r2, #1
 370 0018 4FF40051 		mov	r1, #8192
 371 001c 1C48     		ldr	r0, .L29
 372 001e FFF7FEFF 		bl	HAL_GPIO_WritePin
 373              	.LVL27:
 135:Src/main.c    ****     buf[19] = '\n';
 374              		.loc 1 135 5 view .LVU88
 375 0022 1C4E     		ldr	r6, .L29+4
 376 0024 FC22     		movs	r2, #252
 377 0026 1C49     		ldr	r1, .L29+8
 378 0028 3046     		mov	r0, r6
 379 002a FFF7FEFF 		bl	HAL_UART_Transmit_IT
 380              	.LVL28:
 136:Src/main.c    **** 
 381              		.loc 1 136 5 view .LVU89
 136:Src/main.c    **** 
 382              		.loc 1 136 13 is_stmt 0 view .LVU90
 383 002e 1B4F     		ldr	r7, .L29+12
ARM GAS  /var/folders/_f/88qcw_5n2jl40jjphvxyt7wh0000gn/T//ccCJayWR.s 			page 15


 384 0030 0A23     		movs	r3, #10
 385 0032 FB74     		strb	r3, [r7, #19]
 138:Src/main.c    ****     HAL_GPIO_WritePin(CS_AO1_GPIO_Port, CS_AO1_Pin, GPIO_PIN_SET);
 386              		.loc 1 138 5 is_stmt 1 view .LVU91
 387 0034 1A4C     		ldr	r4, .L29+16
 388 0036 0122     		movs	r2, #1
 389 0038 1146     		mov	r1, r2
 390 003a 2046     		mov	r0, r4
 391 003c FFF7FEFF 		bl	HAL_GPIO_WritePin
 392              	.LVL29:
 139:Src/main.c    ****     HAL_GPIO_WritePin(CS_AO2_GPIO_Port, CS_AO2_Pin, GPIO_PIN_SET);
 393              		.loc 1 139 5 view .LVU92
 394 0040 0122     		movs	r2, #1
 395 0042 0221     		movs	r1, #2
 396 0044 2046     		mov	r0, r4
 397 0046 FFF7FEFF 		bl	HAL_GPIO_WritePin
 398              	.LVL30:
 140:Src/main.c    **** 
 399              		.loc 1 140 5 view .LVU93
 400 004a 0122     		movs	r2, #1
 401 004c 0421     		movs	r1, #4
 402 004e 2046     		mov	r0, r4
 403 0050 FFF7FEFF 		bl	HAL_GPIO_WritePin
 404              	.LVL31:
 142:Src/main.c    ****     dac_set_voltage(1, 0);
 405              		.loc 1 142 5 view .LVU94
 406 0054 0024     		movs	r4, #0
 407 0056 0025     		movs	r5, #0
 408 0058 2246     		mov	r2, r4
 409 005a 2B46     		mov	r3, r5
 410 005c 0020     		movs	r0, #0
 411 005e FFF7FEFF 		bl	dac_set_voltage
 412              	.LVL32:
 143:Src/main.c    ****     dac_set_voltage(2, 0);
 413              		.loc 1 143 5 view .LVU95
 414 0062 2246     		mov	r2, r4
 415 0064 2B46     		mov	r3, r5
 416 0066 0120     		movs	r0, #1
 417 0068 FFF7FEFF 		bl	dac_set_voltage
 418              	.LVL33:
 144:Src/main.c    **** 
 419              		.loc 1 144 5 view .LVU96
 420 006c 2246     		mov	r2, r4
 421 006e 2B46     		mov	r3, r5
 422 0070 0220     		movs	r0, #2
 423 0072 FFF7FEFF 		bl	dac_set_voltage
 424              	.LVL34:
 146:Src/main.c    ****     /* Infinite loop */
 425              		.loc 1 146 5 view .LVU97
 426 0076 0B4B     		ldr	r3, .L29+20
 427 0078 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 428 007a 0122     		movs	r2, #1
 429 007c 3944     		add	r1, r1, r7
 430 007e 3046     		mov	r0, r6
 431 0080 FFF7FEFF 		bl	HAL_UART_Receive_IT
 432              	.LVL35:
 433              	.L27:
ARM GAS  /var/folders/_f/88qcw_5n2jl40jjphvxyt7wh0000gn/T//ccCJayWR.s 			page 16


 149:Src/main.c    ****         /* USER CODE END WHILE */
 434              		.loc 1 149 5 discriminator 1 view .LVU98
 152:Src/main.c    ****         /* USER CODE BEGIN 3 */
 435              		.loc 1 152 9 discriminator 1 view .LVU99
 436 0084 4FF49670 		mov	r0, #300
 437 0088 FFF7FEFF 		bl	HAL_Delay
 438              	.LVL36:
 149:Src/main.c    ****         /* USER CODE END WHILE */
 439              		.loc 1 149 11 discriminator 1 view .LVU100
 440 008c FAE7     		b	.L27
 441              	.L30:
 442 008e 00BF     		.align	2
 443              	.L29:
 444 0090 00100140 		.word	1073811456
 445 0094 00000000 		.word	huart1
 446 0098 00000000 		.word	.LANCHOR2
 447 009c 00000000 		.word	.LANCHOR1
 448 00a0 00080140 		.word	1073809408
 449 00a4 00000000 		.word	.LANCHOR0
 450              		.cfi_endproc
 451              	.LFE66:
 453              		.global	num_symbol
 454              		.global	buf
 455              		.global	text
 456              		.section	.bss.buf,"aw",%nobits
 457              		.align	2
 458              		.set	.LANCHOR1,. + 0
 461              	buf:
 462 0000 00000000 		.space	20
 462      00000000 
 462      00000000 
 462      00000000 
 462      00000000 
 463              		.section	.bss.num_symbol,"aw",%nobits
 464              		.set	.LANCHOR0,. + 0
 467              	num_symbol:
 468 0000 00       		.space	1
 469              		.section	.data.text,"aw"
 470              		.align	2
 471              		.set	.LANCHOR2,. + 0
 474              	text:
 475 0000 54686973 		.ascii	"This firmware control voltage on output DAC \012Set"
 475      20666972 
 475      6D776172 
 475      6520636F 
 475      6E74726F 
 476 0030 74696E67 		.ascii	"tings: 115200 Baud, NL (new line) \012Channel names"
 476      733A2031 
 476      31353230 
 476      30204261 
 476      75642C20 
 477 0060 3A20616F 		.ascii	": ao0 ao1 ao2 \012Range output voltage: 0-10v \012E"
 477      3020616F 
 477      3120616F 
 477      32200A52 
 477      616E6765 
 478 008d 78616D70 		.ascii	"xamples of commands: \012ao0 5.54 \012ao1 0 \012ao2"
ARM GAS  /var/folders/_f/88qcw_5n2jl40jjphvxyt7wh0000gn/T//ccCJayWR.s 			page 17


 478      6C657320 
 478      6F662063 
 478      6F6D6D61 
 478      6E64733A 
 479 00b7 20313020 		.ascii	" 10 \012///////////////////END/////////////////////"
 479      0A2F2F2F 
 479      2F2F2F2F 
 479      2F2F2F2F 
 479      2F2F2F2F 
 480 00e7 0A0A616F 		.ascii	"\012\012ao0 0\012ao1 0\012ao2 0\012\000"
 480      3020300A 
 480      616F3120 
 480      300A616F 
 480      3220300A 
 481              		.text
 482              	.Letext0:
 483              		.file 3 "/Applications/ARM/arm-none-eabi/include/machine/_default_types.h"
 484              		.file 4 "/Applications/ARM/arm-none-eabi/include/sys/_stdint.h"
 485              		.file 5 "Drivers/CMSIS/Device/ST/STM32F1xx/Include/stm32f103xb.h"
 486              		.file 6 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_def.h"
 487              		.file 7 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_rcc.h"
 488              		.file 8 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_rcc_ex.h"
 489              		.file 9 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_gpio.h"
 490              		.file 10 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_dma.h"
 491              		.file 11 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_uart.h"
 492              		.file 12 "Inc/usart.h"
 493              		.file 13 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal.h"
 494              		.file 14 "Inc/gpio.h"
 495              		.file 15 "Inc/spi.h"
 496              		.file 16 "Inc/dac.h"
 497              		.file 17 "Inc/console.h"
 498              		.file 18 "<built-in>"
ARM GAS  /var/folders/_f/88qcw_5n2jl40jjphvxyt7wh0000gn/T//ccCJayWR.s 			page 18


DEFINED SYMBOLS
                            *ABS*:0000000000000000 main.c
/var/folders/_f/88qcw_5n2jl40jjphvxyt7wh0000gn/T//ccCJayWR.s:18     .rodata.HAL_UART_RxCpltCallback.str1.4:0000000000000000 $d
/var/folders/_f/88qcw_5n2jl40jjphvxyt7wh0000gn/T//ccCJayWR.s:22     .text.HAL_UART_RxCpltCallback:0000000000000000 $t
/var/folders/_f/88qcw_5n2jl40jjphvxyt7wh0000gn/T//ccCJayWR.s:28     .text.HAL_UART_RxCpltCallback:0000000000000000 HAL_UART_RxCpltCallback
/var/folders/_f/88qcw_5n2jl40jjphvxyt7wh0000gn/T//ccCJayWR.s:154    .text.HAL_UART_RxCpltCallback:0000000000000074 $d
/var/folders/_f/88qcw_5n2jl40jjphvxyt7wh0000gn/T//ccCJayWR.s:162    .text.Error_Handler:0000000000000000 $t
/var/folders/_f/88qcw_5n2jl40jjphvxyt7wh0000gn/T//ccCJayWR.s:168    .text.Error_Handler:0000000000000000 Error_Handler
/var/folders/_f/88qcw_5n2jl40jjphvxyt7wh0000gn/T//ccCJayWR.s:223    .text.Error_Handler:0000000000000030 $d
/var/folders/_f/88qcw_5n2jl40jjphvxyt7wh0000gn/T//ccCJayWR.s:228    .text.SystemClock_Config:0000000000000000 $t
/var/folders/_f/88qcw_5n2jl40jjphvxyt7wh0000gn/T//ccCJayWR.s:234    .text.SystemClock_Config:0000000000000000 SystemClock_Config
/var/folders/_f/88qcw_5n2jl40jjphvxyt7wh0000gn/T//ccCJayWR.s:335    .text.main:0000000000000000 $t
/var/folders/_f/88qcw_5n2jl40jjphvxyt7wh0000gn/T//ccCJayWR.s:341    .text.main:0000000000000000 main
/var/folders/_f/88qcw_5n2jl40jjphvxyt7wh0000gn/T//ccCJayWR.s:444    .text.main:0000000000000090 $d
/var/folders/_f/88qcw_5n2jl40jjphvxyt7wh0000gn/T//ccCJayWR.s:467    .bss.num_symbol:0000000000000000 num_symbol
/var/folders/_f/88qcw_5n2jl40jjphvxyt7wh0000gn/T//ccCJayWR.s:461    .bss.buf:0000000000000000 buf
/var/folders/_f/88qcw_5n2jl40jjphvxyt7wh0000gn/T//ccCJayWR.s:474    .data.text:0000000000000000 text
/var/folders/_f/88qcw_5n2jl40jjphvxyt7wh0000gn/T//ccCJayWR.s:457    .bss.buf:0000000000000000 $d
/var/folders/_f/88qcw_5n2jl40jjphvxyt7wh0000gn/T//ccCJayWR.s:468    .bss.num_symbol:0000000000000000 $d
/var/folders/_f/88qcw_5n2jl40jjphvxyt7wh0000gn/T//ccCJayWR.s:470    .data.text:0000000000000000 $d

UNDEFINED SYMBOLS
HAL_UART_Receive_IT
buf_decode
HAL_UART_Transmit_IT
huart1
HAL_GPIO_WritePin
HAL_Delay
memset
HAL_RCC_OscConfig
HAL_RCC_ClockConfig
HAL_Init
MX_GPIO_Init
MX_SPI1_Init
MX_USART1_UART_Init
dac_set_voltage
